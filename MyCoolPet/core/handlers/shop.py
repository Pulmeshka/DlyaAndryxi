from aiogram import types
from ..db import db, pets
from .confog import dp

chooseButton = types.InlineKeyboardMarkup()
chooseButton.add(types.InlineKeyboardButton(text='—è–π—Ü–∞ü•ö', callback_data='egg'))
chooseButton.add(types.InlineKeyboardButton(text='–ø—Ä–µ–¥–º–µ—Ç—ãüéí', callback_data='items'))
chooseButton.add(types.InlineKeyboardButton(text='–æ—Å–æ–±—ã–µ –∞–∫—Ü–∏–∏‚ú®', callback_data='action'))

eggButton = types.InlineKeyboardMarkup()
eggButton.add(types.InlineKeyboardButton(text='–æ–±—ã—á–Ω–æ–µ —è–π—Ü–æü•ö', callback_data='EggOne'))
eggButton.add(types.InlineKeyboardButton(text='–ø–æ–∫–µ–º–æ–Ω —è–π—Ü–æ‚ú®', callback_data='EggTwo'))
eggButton.add(types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥üîô', callback_data='back'))

itemsButton = types.InlineKeyboardMarkup()
itemsButton.add(types.InlineKeyboardButton(text='–ø–µ—Ä—á–∞—Ç–∫–∏üß§', callback_data='gloveItems'))
itemsButton.add(types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥üîô', callback_data='back'))

actionButton = types.InlineKeyboardMarkup()
actionButton.add(types.InlineKeyboardButton(text='VIPüëë', callback_data='vipnext'))
actionButton.add(types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥üîô', callback_data='back'))

vipButton = types.InlineKeyboardMarkup()
vipButton.add(types.InlineKeyboardButton(text='–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏‚úÖ', callback_data='buyvip'))
vipButton.add(types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥üîô', callback_data='back'))

backButton = types.InlineKeyboardMarkup()
backButton.add(types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥üîô', callback_data='back'))

async def shop_comamnd(message: types.Message):   
    user_id = message.from_user.id
    name = message.from_user.full_name
    user = message.from_user.username
    await db.insert_user(user_id, name, user)
    if await db.get_ban(user_id) == 1:
        await message.answer('—Ç—ã –≤ –±–∞–Ω–µüí•')
        return
    await message.reply('–≤—ã–±–µ—Ä–µ—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç', reply_markup=chooseButton)

async def eggs(call: types.CallbackQuery):
    user_id = call.from_user.id
    touch_id = call.message.reply_to_message.from_user.id
    if user_id != touch_id:
        await call.answer('üôÜ –ù–µ —Ç–≤–æ—ë', show_alert=True)
        return
    else:
        await call.message.edit_text(
            'ü•ö—Ü–µ–Ω—ã –∏ —Ç–æ–≤–∞—Ä—ãü•ö\n'
            '–æ–±—ã—á–Ω–æ–µ —è–π—Ü–æü•ö - 2000 –∫–æ–∏–Ω–æ–≤ü™ô(—Å –≤–∏–ø - 1900)\n'
            '–ø–æ–∫–µ–º–æ–Ω —è–π—Ü–æ‚ú® - 100 –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤üíé(—Å –≤–∏–ø - 90)\n'
            , reply_markup=eggButton)
        
async def actions(call: types.CallbackQuery):
    user_id = call.from_user.id
    touch_id = call.message.reply_to_message.from_user.id
    if user_id != touch_id:
        await call.answer('üôÜ –ù–µ —Ç–≤–æ—ë', show_alert=True)
        return
    else:
        await call.message.edit_text(
            'VIPüëë', reply_markup=actionButton)
        
async def items_shop(call: types.CallbackQuery):
    user_id = call.from_user.id
    touch_id = call.message.reply_to_message.from_user.id
    if user_id != touch_id:
        await call.answer('üôÜ –ù–µ —Ç–≤–æ—ë', show_alert=True)
        return
    else:
        await call.message.edit_text(
            '–ø–µ—Ä—á–∞—Ç–∫–∏üß§(–¥–æ 100%) - 400 –∫–æ–∏–Ω–æ–≤‚öú(—Å –≤–∏–ø - 350)', reply_markup=itemsButton)
        
async def glove_buy(call: types.CallbackQuery):
    user_id = call.from_user.id
    touch_id = call.message.reply_to_message.from_user.id
    if user_id != touch_id:
        await call.answer('üôÜ –ù–µ —Ç–≤–æ—ë', show_alert=True)
        return
    else:
        coin = await db.get_coin(user_id)
        coin = int(coin)
        vip = await db.vip(user_id)
        if vip == 1:
            summa = 350
        else:
            summa = 400
        summa = int(summa)
        if coin == summa or coin > summa: 
            glove = await db.get_glove(user_id)
            if glove == 100:
                await call.message.edit_text('–ø–µ—Ä—á–∞—Ç–∫–∏ —É–∂–µ —Å 100%', reply_markup=backButton)
                return
            glove = 100
            coin -= summa
            await db.update_coin(user_id, coin)
            await db.update_glove(user_id, glove)
            await call.message.edit_text('‚úÖ–≤—ã –∫—É–ø–∏–ª–∏ –ø–µ—Ä—á–∞—Ç–∫–∏üß§', reply_markup=backButton)
        else:
            await call.message.edit_text('–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç‚ùå', reply_markup=backButton)
        
async def egg1(call: types.CallbackQuery):
    user_id = call.from_user.id
    touch_id = call.message.reply_to_message.from_user.id
    if user_id != touch_id:
        await call.answer('üôÜ –ù–µ —Ç–≤–æ—ë', show_alert=True)
        return
    else:
        coin = await db.get_coin(user_id)
        coin = int(coin)
        vip = await db.vip(user_id)
        if vip == 1:
            summa = 1900
        else:
            summa = 2000
        summa = int(summa)
        if coin == summa or coin > summa: 
            egg = await pets.default(user_id)
            egg += 1
            coin -= summa
            await db.update_coin(user_id, coin)
            await pets.default_up(user_id, egg)
            await call.message.edit_text('‚úÖ–≤—ã –∫—É–ø–∏–ª–∏ –æ–±—ã—á–Ω–æ–µ —è–π—Ü–æü•ö', reply_markup=backButton)
        else:
            await call.message.edit_text('–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç‚ùå', reply_markup=backButton)

async def egg2(call: types.CallbackQuery):#
    user_id = call.from_user.id
    touch_id = call.message.reply_to_message.from_user.id
    if user_id != touch_id:
        await call.answer('üôÜ –ù–µ —Ç–≤–æ—ë', show_alert=True)
        return
    else:
        diamond = await db.get_diamond(user_id)#
        diamond = int(diamond)#
        vip = await db.vip(user_id)
        if vip == 1:
            summa = 90#
        else:
            summa = 100#
        summa = int(summa)
        if diamond == summa or diamond > summa: #
            egg = await pets.premium(user_id)#
            egg += 1
            diamond -= summa#
            await db.update_diamond(user_id, diamond)#
            await pets.premium_up(user_id, egg)#
            await call.message.edit_text('‚úÖ–≤—ã –∫—É–ø–∏–ª–∏ –ø–æ–∫–µ–º–æ–Ω —è–π—Ü–æ‚ú®', reply_markup=backButton)#
        else:
            await call.message.edit_text('–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤‚ùå', reply_markup=backButton)


async def back_button(call: types.CallbackQuery):
    user_id = call.from_user.id
    touch_id = call.message.reply_to_message.from_user.id
    if user_id != touch_id:
        await call.answer('üôÜ –ù–µ —Ç–≤–æ—ë', show_alert=True)
        return
    else:
        await call.message.edit_text('–≤—ã–±–µ—Ä–µ—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç', reply_markup=chooseButton)

async def vipn(call: types.CallbackQuery):
    user_id = call.from_user.id
    touch_id = call.message.reply_to_message.from_user.id
    if user_id != touch_id:
        await call.answer('üôÜ –ù–µ —Ç–≤–æ—ë', show_alert=True)
        return
    else:
        await call.message.edit_text(
            '<b>VIP</b> –ø—Ä–∏–≤–∏–ª–µ–≥–∏—èüëë\n'
            '—Å—Ç–æ–∏–º–æ—Å—Ç—å: <b>500üíé</b>\n'
            '–≤–æ–∑–º–æ–∂–Ω—Å—Ç–∏:\n'
            '-VIP —Ç–µ–≥ –≤ –ø—Ä–æ—Ñ–∏–ª–µ\n'
            '-–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–∞—Ä–∏—Ç—å –≤–µ—â–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µüéÅ\n'
            '-–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–∞—Ä–∏—Ç—å VIP –ø–æ —Ü–µ–Ω–µ 450üíéüéÅ\n'
            '-–µ–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü (ID - 10)\n'
            '-–µ–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –∏–≥—Ä–∞ <b>–≤–∏–ø–µ—Ä</b>\n'
            '-5000 –º–æ–Ω–µ—Çü™ô\n'
            '-–†–ü –∫–æ–º–∞–Ω–¥–∞ - <b>–≤—ã–∫–∏–Ω—É—Ç—å</b>\n'
            '-–ø–æ–∫—É–ø–∫–∞ –≤–µ—â–µ–π –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ\n'
            '–ø–æ–∫—É–ø–∞–π –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—èüòÄ'
        , parse_mode='HTML', reply_markup=vipButton)

async def buy_vip(call: types.CallbackQuery):
    user_id = call.from_user.id
    touch_id = call.message.reply_to_message.from_user.id
    touch_name = call.message.reply_to_message.from_user.first_name
    if user_id != touch_id:
        await call.answer('üôÜ –ù–µ —Ç–≤–æ—ë', show_alert=True)
        return
    else:
        if await db.vip(user_id) == 1:
            await call.message.edit_text('–¢—ã —É–∂–µ –≤–ª–∞–¥–µ–ª–µ—Ü –≤–∏–ø‚ùå', reply_markup=backButton)
            return
        diamond = await db.get_diamond(user_id)
        diamond = int(diamond)
        if diamond < 500:
            await call.message.edit_text('–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤‚ùå', reply_markup=backButton)
            return
        diamond -= 500
        vip = 1
        coin = await db.get_coin(user_id)
        coin = int(coin)
        coin += 5000
        vip_pet = 1
        await call.message.edit_text('‚úÖ')
        await call.message.answer_sticker(f'CAACAgIAAxkBAQPrVmUkNtApKomUrpFb_Ho66CNv0O5CAAKzCwACKlBRSiyjtgnsadPWMAQ')
        await call.message.answer(f'ü•≥<b>{touch_name}</b> –ü–†–ò–û–ë–†–Å–õ <b>VIP</b>ü•Ç', parse_mode='HTML')

        await db.up_vip(user_id, vip)
        await db.update_coin(user_id, coin)
        await db.update_diamond(user_id, diamond)
        await pets.update_vip(user_id, vip_pet)