from aiogram import types
from ..db import db
from .confog import *


async def check_pet_id(message: types.Message):  
    user_id = message.from_user.id
    name = message.from_user.full_name
    user = message.from_user.username
    await db.insert_user(user_id, name, user)
    if await db.get_ban(user_id) == 1:
        await message.answer('—Ç—ã –≤ –±–∞–Ω–µüí•')
        return
    try:     
        id = message.text.split()[1]
        try:
            id = int(id)
            if id > pets_all or id < 1:
                await message.answer('—Ç–∞–∫–æ–≥–æ ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç‚ùå')
                return
            await message.answer_sticker(f'{wear_pet[id]}')
            if id in exclusive_id:
                text = 'üéóÔ∏è–µ–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –ø–∏—Ç–æ–º–µ—ÜüéóÔ∏è'
            elif id in common:
                text = 'üóΩ–æ–±—ã—á–Ω—ã–π –ø–∏—Ç–æ–º–µ—ÜüóΩ'
            elif id in rare:
                text = '‚≠ï—Ä–µ–¥–∫–∏–π –ø–∏—Ç–æ–º–µ—Ü‚≠ï'
            elif id in legendary:
                text = 'üí¢–ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –ø–∏—Ç–æ–º–µ—Üüí¢'
            elif id in mystic:
                text = 'üí´–º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ø–∏—Ç–æ–º–µ—Üüí´'

            if id in x1:
                xx = 'x1'
            elif id in x2:
                xx = 'x2'
            elif id in x3:
                xx = 'x3'

            await message.answer(f'–ü–∏—Ç–æ–º–µ—Üüê∂: <b>{rare_pet[id]}{pets_id[id]}{rare_pet[id]}</b>\n{text}\n—É–º–Ω–æ–∂–∏—Ç–µ–ª—å: {xx}', parse_mode='HTML')
        except ValueError:
            await message.answer('ID –ø–∏—Ç–æ–º—Ü–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º‚ùå')
    except IndexError:
        await message.answer('—Ç—ã –Ω–µ –≤–≤–µ–ª ID‚ùå')