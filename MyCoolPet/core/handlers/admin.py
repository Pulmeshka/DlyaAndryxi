from aiogram import types
from ..db import db, pets
from .confog import *

async def admin_comamnds(message: types.Message):   
    user_id = message.from_user.id
    name = message.from_user.full_name
    user = message.from_user.username
    await db.insert_user(user_id, name, user)
    if user_id not in admin_id_list:
        await message.answer('–∫—É–¥–∞ –º—ã –ª–µ–∑–∏–º?')
        return
    await message.answer(
        '–∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã\n'
        '-MyBan/–ú–∞–π–ë–∞–Ω/–±–ª–æ–∫–Ω—É—Ç—å - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n'
        '-MyUnban/–ú–∞–π–∞–Ω–±–∞–Ω/—Ä–∞–∑–±–ª–æ–∫–∞—Ç—å - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n'
        '-–≤—ã–¥–∞—Ç—å/give <1-–∫–æ–∏–Ω—ã/2-–∫—Ä–∏—Å—Ç–∞–ª–ª—ã> <—Å—É–º–∞> - –≤—ã–¥–∞—Ç—å –Ω—É–∂–Ω—É—é –≤–∞–ª—é—Ç—É(–≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ) 1 - –≤—ã–¥–∞—á–∞ –∫–æ–∏–Ω–æ–≤, 2 - –≤—ã–¥–∞—á–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤\n'
        '-givepet/–≤—ã–¥–∞—Ç—å –ø–µ—Ç <ID –ø–∏—Ç–æ–º—Ü–∞> - –≤—ã–¥–∞—Ç—å –ª—é–±–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ –ø–æ –µ–≥–æ ID(–≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)')

async def ban_player(message: types.Message):   
    user_id = message.from_user.id
    name = message.from_user.full_name
    user = message.from_user.username
    await db.insert_user(user_id, name, user)
    if user_id not in admin_id_list:
        await message.answer('–∫—É–¥–∞ –º—ã –ª–µ–∑–∏–º?')
        return
    if not message.reply_to_message:
        await message.answer('–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—å')
        return
    player_id = message.reply_to_message.from_user.id
    name2 = message.reply_to_message.from_user.full_name
    user2 = message.reply_to_message.from_user.username
    await db.insert_user(player_id, name2, user2)
    if message.reply_to_message.from_user.is_bot:
        await message.answer('—è –±—Ä–∞–¥–∫–∞ –Ω–µ –∑–∞–±–∞–Ω—é')
        return
    if player_id == user_id:
        await message.answer('–º–Ω–µ —Ç–æ—á–Ω–æ –Ω—É–∂–Ω–æ —Ç–µ–±—è –∑–∞–±–∞–Ω–∏—Ç—å?')
        return
    ban = await db.get_ban(player_id)
    if ban == 1:
        await message.answer('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–∞–Ω–µ')
        return
    if player_id in admin_id_list:
        await message.answer('–Ω–µ —Ç—Ä–æ–≥–∞–π –∞–¥–º–∏–Ω–∞üõë')
        return
    ban = 1
    await db.update_ban(player_id, ban)
    await message.answer('‚úÖ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω‚úÖ')

async def unban_player(message: types.Message):   
    user_id = message.from_user.id
    name = message.from_user.full_name
    user = message.from_user.username
    await db.insert_user(user_id, name, user)
    if user_id not in admin_id_list:
        await message.answer('–∫—É–¥–∞ –º—ã –ª–µ–∑–∏–º?')
        return
    if not message.reply_to_message:
        await message.answer('–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—å')
        return
    player_id = message.reply_to_message.from_user.id
    name2 = message.reply_to_message.from_user.full_name
    user2 = message.reply_to_message.from_user.username
    await db.insert_user(player_id, name2, user2)
    if message.reply_to_message.from_user.is_bot:
        await message.answer('–±—Ä–∞–¥–∫–∏ –≤ –±–∞–Ω–µ –Ω–µ —Å–∏–¥—è—Ç')
        return
    if player_id == user_id:
        await message.answer('–∞ —Ç—ã —Ç—É—Ç –ø—Ä–∏—á—ë–º?')
        return
    ban = await db.get_ban(player_id)
    if ban == 0:
        await message.answer('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–∞–Ω–µ–Ω')
        return
    ban = 0
    await db.update_ban(player_id, ban)
    await message.answer('‚úÖ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω‚úÖ')
    
async def give_coin_diamond(message: types.Message):   
    user_id = message.from_user.id
    name = message.from_user.full_name
    user = message.from_user.username
    await db.insert_user(user_id, name, user)
    if user_id not in admin_id_list:
        await message.answer('–∫—É–¥–∞ –º—ã –ª–µ–∑–∏–º?')
        return
    if not message.reply_to_message:
        await message.answer('–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—å')
        return
    player_id = message.reply_to_message.from_user.id
    name2 = message.reply_to_message.from_user.full_name
    user2 = message.reply_to_message.from_user.username
    await db.insert_user(player_id, name2, user2)
    if message.reply_to_message.from_user.is_bot:
        await message.answer('‚ùå')
        return
    try:
        coin_or_diamond = message.text.split()[1]
        try:
            coin_or_diamond = int(coin_or_diamond)
            try:
                suma = message.text.split()[2]
                player_coin = await db.get_coin(player_id)
                player_diamond = await db.get_diamond(player_id)
                player_coin = int(player_coin)
                try:
                    suma = int(suma)
                    if coin_or_diamond == 1:
                        player_coin += suma
                        await db.update_coin(player_id, player_coin)
                        await message.answer(f'<b>{name2}</b> –±—ã–ª–æ –ø–æ–ª—É—á–µ–Ω–æ <b>{suma}</b> ‚öú–∫–æ–∏–Ω–æ–≤‚öú\n–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <b>{name}</b>', parse_mode='HTML')
                    elif coin_or_diamond == 2:
                        player_diamond = int(player_diamond)
                        player_diamond += suma
                        await db.update_diamond(player_id, player_diamond)
                        await message.answer(f'<b>{name2}</b> –±—ã–ª–æ –ø–æ–ª—É—á–µ–Ω–æ <b>{suma}</b> üíé–∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤üíé\n–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <b>{name}</b>', parse_mode='HTML')
                    else:
                        await message.answer('‚ùå')
                except TypeError:
                    await message.answer('‚ùå')
            except IndexError:
                await message.answer('—Ç—ã –Ω–µ –≤–≤—ë–ª —Å—É–º—É')
        except ValueError:
            await message.answer('‚ùå')
    except IndexError:
        await message.answer('–≤—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç—É –≤—ã–¥–∞—á–∏')



async def give_pet2(message: types.Message):  
    user_id = message.from_user.id
    name = message.from_user.full_name
    user = message.from_user.username
    await db.insert_user(user_id, name, user)
    if user_id not in admin_id_list:
        await message.answer('—Ç—ã –Ω–µ –∞–¥–º–∏–Ω')
        return
    if not message.reply_to_message:
        await message.answer('—Ç—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ')
        return
    player_id = message.reply_to_message.from_user.id
    name2 = message.reply_to_message.from_user.full_name
    user2 = message.reply_to_message.from_user.username
    await db.insert_user(player_id, name2, user2)
    if message.reply_to_message.from_user.is_bot:
        await message.answer('‚ùå')
        return
    try:     
        idpet = message.text.split()[1]
        
        try:
            idpet = int(idpet)

            if idpet == 1: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.butterfly(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_butterfly(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 2: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.butterflyG(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_butterflyG(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')

            if idpet == 3: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.dog(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_dog(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 4: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.dogG(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_dogG(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 5: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.pig(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_pig(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 6: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.pigG(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_pigG(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 7: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.pumpkin(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_pumpkin(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 8: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.cow(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_cow(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 9: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.cowG(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_cowG(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 10: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.vipP(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_vip(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 11: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.lugia(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_lugia(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 12: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.bulbos(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_bulbos(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 13: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.tortank(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_tortank(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            if idpet == 14: #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 = await pets.skwirt(player_id) #–∏–∑–º–µ–Ω–∏—Ç—å
                pet2 += 1
                await pets.update_skwirtl(player_id, pet2) #–∏–∑–º–µ–Ω–∏—Ç—å
                await message.answer(f'<b>{name2}</b> –ø–æ–ª—É—á–∏–ª <b>{pets_id[idpet]}</b>\n–∞–¥–º–∏–Ω <b>{name}</b>', parse_mode='HTML')
            
            else:
                if idpet > pets_all or idpet < 1:
                    await message.answer('ID —Ç–∞–∫–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç‚ùå')
                    return

        except ValueError:
            await message.answer('ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º')
    except IndexError:
        await message.answer('—Ç—ã –Ω–µ –≤–≤–µ–ª ID –ø–∏—Ç–æ–º—Ü–∞')